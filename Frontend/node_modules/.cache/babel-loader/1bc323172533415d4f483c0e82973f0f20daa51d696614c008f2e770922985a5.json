{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adhyan Jain\\\\Desktop\\\\ExpenseTracker\\\\Frontend\\\\src\\\\Components\\\\Prediction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prediction = ({\n  userEmail\n}) => {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  useEffect(() => {\n    const fetchPredictions = async () => {\n      try {\n        const response = await fetch(`/api/predictions?email=${userEmail}`);\n        const data = await response.json();\n        setPredictions(data);\n      } catch (error) {\n        console.error(\"Error fetching predictions:\", error);\n      }\n    };\n    fetchPredictions();\n  }, [userEmail]);\n  const chartData = {\n    labels: predictions.map(p => p.month),\n    datasets: [{\n      label: 'Predicted Expenses',\n      data: predictions.map(p => p.predicted),\n      borderColor: '#FF9800',\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"6-Month Expense Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-details\",\n      children: predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"month\",\n          children: prediction.month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"amount\",\n          children: [\"$\", prediction.predicted.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Prediction, \"zH5rPFTlWYOw2PPwe/kdtH2YoqI=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","Prediction","userEmail","_s","predictions","setPredictions","fetchPredictions","response","fetch","data","json","error","console","chartData","labels","map","p","month","datasets","label","predicted","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","prediction","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Adhyan Jain/Desktop/ExpenseTracker/Frontend/src/Components/Prediction.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Prediction = ({ userEmail }) => {\r\n  const [predictions, setPredictions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPredictions = async () => {\r\n      try {\r\n        const response = await fetch(`/api/predictions?email=${userEmail}`);\r\n        const data = await response.json();\r\n        setPredictions(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching predictions:\", error);\r\n      }\r\n    };\r\n    fetchPredictions();\r\n  }, [userEmail]);\r\n\r\n  const chartData = {\r\n    labels: predictions.map(p => p.month),\r\n    datasets: [{\r\n      label: 'Predicted Expenses',\r\n      data: predictions.map(p => p.predicted),\r\n      borderColor: '#FF9800',\r\n      tension: 0.4\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <div className=\"prediction-container\">\r\n      <h2>6-Month Expense Forecast</h2>\r\n      <div className=\"chart-container\">\r\n        <Line data={chartData} options={{ responsive: true }} />\r\n      </div>\r\n      \r\n      <div className=\"prediction-details\">\r\n        {predictions.map((prediction, index) => (\r\n          <div key={index} className=\"prediction-item\">\r\n            <span className=\"month\">{prediction.month}</span>\r\n            <span className=\"amount\">${prediction.predicted.toFixed(2)}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}