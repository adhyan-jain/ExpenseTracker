{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adhyan Jain\\\\Desktop\\\\ExpenseTracker\\\\Frontend\\\\src\\\\Components\\\\Prediction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport LineChart from \"./Charts/LineChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prediction = ({\n  userEmail\n}) => {\n  _s();\n  const [predictions, setPredictions] = useState([]);\n  useEffect(() => {\n    const fetchPredictions = async () => {\n      try {\n        const response = await fetch(`/api/predictions?email=${userEmail}`);\n        const data = await response.json();\n        setPredictions(data);\n      } catch (error) {\n        console.error(\"Error fetching predictions:\", error);\n      }\n    };\n    fetchPredictions();\n  }, [userEmail]);\n  if (predictions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading predictions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"6-Month Expense Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data: predictions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), predictions.map(prediction => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [prediction.month, \": Predicted - $\", prediction.predicted.toFixed(2), prediction.actual && ` | Actual - $${prediction.actual.toFixed(2)}`]\n    }, prediction.month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Prediction, \"zH5rPFTlWYOw2PPwe/kdtH2YoqI=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","jsxDEV","_jsxDEV","Prediction","userEmail","_s","predictions","setPredictions","fetchPredictions","response","fetch","data","json","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","prediction","month","predicted","toFixed","actual","_c","$RefreshReg$"],"sources":["C:/Users/Adhyan Jain/Desktop/ExpenseTracker/Frontend/src/Components/Prediction.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LineChart from \"./Charts/LineChart\";\r\n\r\nconst Prediction = ({ userEmail }) => {\r\n  const [predictions, setPredictions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPredictions = async () => {\r\n      try {\r\n        const response = await fetch(`/api/predictions?email=${userEmail}`);\r\n        const data = await response.json();\r\n        setPredictions(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching predictions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPredictions();\r\n  }, [userEmail]);\r\n\r\n  if (predictions.length === 0) return <div>Loading predictions...</div>;\r\n\r\n  return (\r\n    <div className=\"prediction\">\r\n      {/* Line Chart Section */}\r\n      <div className=\"card\">\r\n        <h2>6-Month Expense Predictions</h2>\r\n        <LineChart data={predictions} />\r\n      </div>\r\n\r\n      {/* Prediction Details */}\r\n      {predictions.map((prediction) => (\r\n        <p key={prediction.month}>\r\n          {prediction.month}: Predicted - ${prediction.predicted.toFixed(2)}\r\n          {prediction.actual && ` | Actual - $${prediction.actual.toFixed(2)}`}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0BN,SAAS,EAAE,CAAC;QACnE,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,cAAc,CAACI,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDL,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,IAAIE,WAAW,CAACS,MAAM,KAAK,CAAC,EAAE,oBAAOb,OAAA;IAAAc,QAAA,EAAK;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEtE,oBACElB,OAAA;IAAKmB,SAAS,EAAC,YAAY;IAAAL,QAAA,gBAEzBd,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACnBd,OAAA;QAAAc,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpClB,OAAA,CAACF,SAAS;QAACW,IAAI,EAAEL;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,EAGLd,WAAW,CAACgB,GAAG,CAAEC,UAAU,iBAC1BrB,OAAA;MAAAc,QAAA,GACGO,UAAU,CAACC,KAAK,EAAC,iBAAe,EAACD,UAAU,CAACE,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC,EAChEH,UAAU,CAACI,MAAM,IAAI,gBAAgBJ,UAAU,CAACI,MAAM,CAACD,OAAO,CAAC,CAAC,CAAC,EAAE;IAAA,GAF9DH,UAAU,CAACC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CApCIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}